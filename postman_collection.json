{
	"info": {
		"_postman_id": "b2c-booking-api-collection",
		"name": "B2C Booking API",
		"description": "Complete API collection for B2C Travel Booking Platform with JWT authentication, user management, bookings, and travellers management.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{accessToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000",
			"type": "string"
		},
		{
			"key": "accessToken",
			"value": "",
			"type": "string"
		},
		{
			"key": "refreshToken",
			"value": "",
			"type": "string"
		},
		{
			"key": "userId",
			"value": "",
			"type": "string"
		},
		{
			"key": "bookingId",
			"value": "",
			"type": "string"
		},
		{
			"key": "travellerId",
			"value": "",
			"type": "string"
		}
	],
	"item": [
		{
			"name": "Health Check",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/health",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"health"
					]
				}
			},
			"response": []
		},
		{
			"name": "Authentication",
			"item": [
				{
					"name": "User Signup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.collectionVariables.set('accessToken', response.data.tokens.accessToken);",
									"    pm.collectionVariables.set('refreshToken', response.data.tokens.refreshToken);",
									"    pm.collectionVariables.set('userId', response.data.user._id);",
									"    pm.test('User registered successfully', function () {",
									"        pm.expect(response.status).to.eql('success');",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstName\": \"Test\",\n  \"lastName\": \"User\",\n  \"email\": \"test.user@example.com\",\n  \"password\": \"password123\",\n  \"phone\": \"+1-555-0199\",\n  \"dateOfBirth\": \"1995-06-15\",\n  \"gender\": \"male\",\n  \"address\": {\n    \"street\": \"123 Test Street\",\n    \"city\": \"Test City\",\n    \"state\": \"Test State\",\n    \"country\": \"Test Country\",\n    \"zipCode\": \"12345\"\n  }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/signup",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "User Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.collectionVariables.set('accessToken', response.data.tokens.accessToken);",
									"    pm.collectionVariables.set('refreshToken', response.data.tokens.refreshToken);",
									"    pm.collectionVariables.set('userId', response.data.user._id);",
									"    pm.test('Login successful', function () {",
									"        pm.expect(response.status).to.eql('success');",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Refresh Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.collectionVariables.set('accessToken', response.data.tokens.accessToken);",
									"    pm.collectionVariables.set('refreshToken', response.data.tokens.refreshToken);",
									"    pm.test('Token refreshed successfully', function () {",
									"        pm.expect(response.status).to.eql('success');",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"refreshToken\": \"{{refreshToken}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/refresh",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"refresh"
							]
						}
					},
					"response": []
				},
				{
					"name": "User Logout",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"refreshToken\": \"{{refreshToken}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"logout"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User Profile",
			"item": [
				{
					"name": "Get User Profile",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/user/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"user",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User Profile",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstName\": \"John Updated\",\n  \"lastName\": \"Doe Updated\",\n  \"phone\": \"+1-555-0199\",\n  \"address\": {\n    \"street\": \"456 Updated Street\",\n    \"city\": \"Updated City\",\n    \"state\": \"Updated State\",\n    \"country\": \"USA\",\n    \"zipCode\": \"54321\"\n  }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/user/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"user",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User Statistics",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/user/stats",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"user",
								"stats"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Bookings",
			"item": [
				{
					"name": "Get All Bookings",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/bookings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"bookings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Upcoming Bookings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.data.bookings.length > 0) {",
									"        pm.collectionVariables.set('bookingId', response.data.bookings[0]._id);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/bookings?status=upcoming&page=1&limit=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"bookings"
							],
							"query": [
								{
									"key": "status",
									"value": "upcoming"
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Completed Bookings",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/bookings?status=completed&page=1&limit=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"bookings"
							],
							"query": [
								{
									"key": "status",
									"value": "completed"
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Booking by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/bookings/{{bookingId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"bookings",
								"{{bookingId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Generate Booking Summary (AI)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/bookings/{{bookingId}}/summary",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"bookings",
								"{{bookingId}}",
								"summary"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Travellers",
			"item": [
				{
					"name": "Get All Travellers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.data.travellers.length > 0) {",
									"        pm.collectionVariables.set('travellerId', response.data.travellers[0]._id);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/travellers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"travellers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add New Traveller",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"bookingId\": \"{{bookingId}}\",\n  \"firstName\": \"Alice\",\n  \"lastName\": \"Johnson\",\n  \"dateOfBirth\": \"1992-08-15\",\n  \"gender\": \"female\",\n  \"passportNumber\": \"P12345678\",\n  \"nationality\": \"American\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/travellers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"travellers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Traveller",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"bookingId\": \"{{bookingId}}\",\n  \"firstName\": \"Alice Updated\",\n  \"lastName\": \"Johnson Updated\",\n  \"dateOfBirth\": \"1992-08-15\",\n  \"gender\": \"female\",\n  \"passportNumber\": \"P87654321\",\n  \"nationality\": \"American\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/travellers/{{travellerId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"travellers",
								"{{travellerId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Traveller",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"bookingId\": \"{{bookingId}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/travellers/{{travellerId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"travellers",
								"{{travellerId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Error Handling Tests",
			"item": [
				{
					"name": "Invalid Route (404)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/invalid-route",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"invalid-route"
							]
						}
					},
					"response": []
				},
				{
					"name": "Unauthorized Access (401)",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/user/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"user",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid Data Validation (400)",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"invalid-email\",\n  \"password\": \"123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/signup",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"signup"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}